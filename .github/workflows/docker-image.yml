name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  flake:
    name: Flake it harder
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Update pip
        run: python -m pip install -U pip
      - name: Install flake8
        run: python -m pip install flake8==4.0.1 flake8-variables-names==0.0.5
      - name: Flake me like one of your french
        run: flake8

  test:
    name: Test it better
    needs: flake
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependency
        run: python -m pip install tortoise-orm pytest pytest-asyncio
      - name: Run tests
        run: python -m pytest tests/test_db.py --asyncio-mode=strict

  build:
    name: Build it faster
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: docker build -f Dockerfile -t bot:latest .

  push:
    name: Push it stronger
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: vmstr8/rdwn-telegram-bot

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: |-
            linux/amd64
            linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}